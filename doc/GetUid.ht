<HTML>
<! Copyright (c) 1990 The Regents of the University of California.-->
<! Copyright (c) 1994 Sun Microsystems, Inc.-->
<! See the file "license.terms" for information on usage and redistribution-->
<! of this file, and for a DISCLAIMER OF ALL WARRANTIES.-->
<! -->
<! @(#) GetUid.3 1.8 95/05/06 15:29:51-->
<! -->
<H1>Tk_GetUid</H1>
<HR>
<A NAME=NAME><H2>NAME</H2>
</A>Tk_GetUid, Tk_Uid - convert from string to unique identifier<BR>
<A NAME=SYNOPSIS><H2>SYNOPSIS</H2>
</A><BR>
<B>#include &lt;tk.h&gt;</B><BR>
<P>
<B>#typedef char *Tk_Uid</B><BR>
<P>
Tk_Uid<BR>
<B>Tk_GetUid</B>(<I>string</I>)<BR>
<A NAME=ARGUMENTS><H2>ARGUMENTS</H2>
</A><DL>
<DT><CODE>char *string</CODE>
(in) <DD>String for which the corresponding unique identifier is<BR>
desired.<BR>
</DL>
<HR>
<BR>
<A NAME=DESCRIPTION><H2>DESCRIPTION</H2>
</A><P>
<B>Tk_GetUid</B> returns the unique identifier corresponding<BR>
to <I>string</I>.<BR>
Unique identifiers are similar to atoms in Lisp, and are used<BR>
in Tk to speed up comparisons and<BR>
searches.  A unique identifier (type Tk_Uid) is a string pointer<BR>
and may be used anywhere that a variable of type ``char *''<BR>
could be used.  However, there is guaranteed to be exactly<BR>
one unique identifier for any given string value.  If <B>Tk_GetUid</B><BR>
is called twice, once with string <I>a</I> and once with string<BR>
<I>b</I>, and if <I>a</I> and <I>b</I> have the same string value<BR>
(strcmp(a, b) == 0), then <B>Tk_GetUid</B> will return exactly<BR>
the same Tk_Uid value for each call (Tk_GetUid(a) == Tk_GetUid(b)).<BR>
This means that variables of type<BR>
Tk_Uid may be compared directly (x == y) without having to call<BR>
<B>strcmp</B>.<BR>
In addition, the return value from <B>Tk_GetUid</B> will have the<BR>
same string value as its argument (strcmp(Tk_GetUid(a), a) == 0).<BR>
<BR>
<A NAME=KEYWORDS><H2>KEYWORDS</H2>
</A>atom, unique identifier<BR>
