<HTML>
<! Copyright (c) 1990 The Regents of the University of California.-->
<! Copyright (c) 1994 Sun Microsystems, Inc.-->
<! See the file "license.terms" for information on usage and redistribution-->
<! of this file, and for a DISCLAIMER OF ALL WARRANTIES.-->
<! -->
<! @(#) RestrictEv.3 1.8 95/05/06 15:30:23-->
<! -->
<H1>Tk_RestrictEvents</H1>
<HR>
<A NAME=NAME><H2>NAME</H2>
</A>Tk_RestrictEvents - filter and selectively delay X events
<A NAME=SYNOPSIS><H2>SYNOPSIS</H2>
</A><BR>
<B>#include &lt;tk.h&gt;</B><BR>
<P>
Tk_RestrictProc *<BR>
<B>Tk_RestrictEvents</B>(<I>proc, arg, prevArgPtr</I>)<BR>
<A NAME=ARGUMENTS><H2>ARGUMENTS</H2>
</A><DL>
<DT><CODE>Tk_RestrictProc *proc</CODE>
(in) <DD>Predicate procedure to call to filter incoming X events.<BR>
NULL means do not restrict events at all.<BR>
<DT><CODE>char *arg</CODE>
(in) <DD>Arbitrary argument to pass to <I>proc</I>.<BR>
<DT><CODE>char **prevArgPtr</CODE>
(in/out) <DD>Pointer to place to save argument to previous restrict procedure.<BR>
</DL>
<HR>
<BR>
<A NAME=DESCRIPTION><H2>DESCRIPTION</H2>
</A><P>
This procedure is useful in certain situations where applications<BR>
are only prepared to receive certain X events.  After<BR>
<B>Tk_RestrictEvents</B> is called, <B>Tk_DoOneEvent</B> (and<BR>
hence <B>Tk_MainLoop</B>) will filter X input events through<BR>
<I>proc</I>.  <I>Proc</I> indicates whether a<BR>
given event is to be processed immediately or deferred until some<BR>
later time (e.g. when the event restriction is lifted).  <I>Proc</I><BR>
is a standard X predicate procedure, of the sort passed to<BR>
<B>XCheckIfEvent</B>.  It must have arguments and result that match<BR>
the type <B>Tk_RestrictProc</B>:<BR>
<BR>
<DL>
typedef Bool Tk_RestrictProc(<BR>
<DL>
Display *<I>display</I>,<BR>
XEvent *<I>eventPtr</I>,<BR>
char *<I>arg</I>);<BR>
</DL>
</DL>
<BR>
The <I>display</I> argument to <I>proc</I> is the display from which
<I>eventPtr</I> was received, and <I>eventPtr</I> points to an event
under consideration.  The <I>arg</I> argument is a copy of the <I>arg</I>
passed to <B>Tk_RestrictEvents</B>;  it may be used to provide
<I>proc</I> with information it needs to filter events.  <I>Proc</I>
must return <B>True</B> or <B>False</B>.  <B>True</B> means the event
should be processed immediately and <B>False</B> means the event
should not be processed now, but should be saved for some later
time.
<P>
<B>Tk_RestrictEvents</B> uses its return value and <I>prevArgPtr</I>
to return information about the current event restriction procedure
(a NULL return value means there are currently no restrictions).
These values may be used to restore the previous restriction state
when there is no longer any need for the current restriction.
<P>
There are very few places where <B>Tk_RestrictEvents</B> is needed.
Please use it only where it is absolutely necessary.
If only a local restriction is needed, it can probably
be achieved more cleanly by changing event-to-Tcl bindings or by
calling <B>Tk_DeleteEventHandler</B>.

<A NAME=KEYWORDS><H2>KEYWORDS</H2>
</A>delay, event, filter, restriction
