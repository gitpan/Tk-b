<HTML>
<! Copyright (c) 1990-1992 The Regents of the University of California.-->
<! Copyright (c) 1994-1995 Sun Microsystems, Inc.-->
<! See the file "license.terms" for information on usage and redistribution-->
<! of this file, and for a DISCLAIMER OF ALL WARRANTIES.-->
<! -->
<! @(#) update.n 1.9 95/05/20 16:34:48-->
<! -->
<H1>update</H1>
<HR>
<! Note:  do not modify the .SH NAME line immediately below!-->
<A NAME=NAME><H2>NAME</H2>
</A>update - Process pending events and/or when-idle handlers
<A NAME=SYNOPSIS><H2>SYNOPSIS</H2>
</A><B>update</B> ?<B>idletasks</B>?
<HR>

<A NAME=DESCRIPTION><H2>DESCRIPTION</H2>
</A><P>
This command is used to bring the entire application world
``up to date.''
It flushes all pending output to the display,  waits for the
server to process that output and return errors or events,
handles all pending events of any sort (including when-idle handlers),
and repeats this set of operations until there are no pending
events, no pending when-idle handlers, no pending output to the server,
and no operations still outstanding at the server.  
<P>
If the <B>idletasks</B> keyword is specified as an argument to the
command, then no new events or errors are processed;  only when-idle
idlers are invoked.
This causes operations that are normally deferred, such as display
updates and window layout calculations, to be performed immediately.
<P>
The <B>update idletasks</B> command is useful in scripts where
changes have been made to the application's state and you want those
changes to appear on the display immediately, rather than waiting
for the script to complete.  Most display updates are performed as
idle handlers, so <B>update idletasks</B> will cause them to run.
However, there are some kinds of updates that only happen in
response to events, such as those triggered by window size changes;
these updates will not occur in <B>update idletasks</B>.
<P>
The <B>update</B> command with no options is useful in scripts where
you are performing a long-running computation but you still want
the application to respond to user interactions;  if you occasionally
call <B>update</B> then user input will be processed during the
next call to <B>update</B>.

<A NAME=KEYWORDS><H2>KEYWORDS</H2>
</A>event, flush, handler, idle, update
