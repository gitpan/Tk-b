<HTML>
<! Copyright (c) 1990-1994 The Regents of the University of California.-->
<! Copyright (c) 1994-1995 Sun Microsystems, Inc.-->
<! See the file "license.terms" for information on usage and redistribution-->
<! of this file, and for a DISCLAIMER OF ALL WARRANTIES.-->
<! -->
<! @(#) checkbutton.n 1.33 95/06/07 21:15:10-->
<! -->
<H1>checkbutton</H1>
<HR>
<! Note:  do not modify the .SH NAME line immediately below!-->
<A NAME=NAME><H2>NAME</H2>
</A>checkbutton - Create and manipulate checkbutton widgets
<A NAME=SYNOPSIS><H2>SYNOPSIS</H2>
</A><B>checkbutton</B><I> pathName </I>?<I>options</I>?
<A NAME=Section0><H2>STANDARD OPTIONS</H2>
</A><P>
<BR>
<B>activeBackground</B>	<B>cursor</B>	<B>highlightThickness</B>	<B>takeFocus</B><BR>
<B>activeForeground</B>	<B>disabledForeground</B>	<B>image</B>	<B>text</B><BR>
<B>anchor</B>	<B>font</B>	<B>justify</B>	<B>textVariable</B><BR>
<B>background</B>	<B>foreground</B>	<B>padX</B>	<B>underline</B><BR>
<B>bitmap</B>	<B>highlightBackground</B>	<B>padY</B>	<B>wrapLength</B><BR>
<B>borderWidth</B>	<B>highlightColor</B>	<B>relief</B><BR>
<BR>
<P>
See the <A HREF="options.ht"> ``options''</A> manual entry for details on the standard options.
<A NAME=Section1><H2>WIDGET-SPECIFIC OPTIONS</H2>
</A><P>
<BR>
<DL>
<DT>Name:	<B>command</B>

<DD><DT>Class:	<B>Command</B>

<DD><DT>Command-Line Switch:	<B>-command</B>

<DD><BR>
Specifies a Tcl command to associate with the button.  This command
is typically invoked when mouse button 1 is released over the button
window.  The button's global variable (<B>-variable</B> option) will
be updated before the command is invoked.
</DL>
<P>
<BR>
<DL>
<DT>Name:	<B>height</B>

<DD><DT>Class:	<B>Height</B>

<DD><DT>Command-Line Switch:	<B>-height</B>

<DD><BR>
Specifies a desired height for the button.
If an image or bitmap is being displayed in the button then the value is in
screen units (i.e. any of the forms acceptable to <B>Tk_GetPixels</B>);
for text it is in lines of text.
If this option isn't specified, the button's desired height is computed
from the size of the image or bitmap or text being displayed in it.
</DL>
<P>
<BR>
<DL>
<DT>Name:	<B>indicatorOn</B>

<DD><DT>Class:	<B>IndicatorOn</B>

<DD><DT>Command-Line Switch:	<B>-indicatoron</B>

<DD><BR>
Specifies whether or not the indicator should be drawn.  Must be a
proper boolean value.  If false, the <B>relief</B> option is
ignored and the widget's relief is always sunken if the widget is
selected and raised otherwise.
</DL>
<P>
<BR>
<DL>
<DT>Name:	<B>offValue</B>

<DD><DT>Class:	<B>Value</B>

<DD><DT>Command-Line Switch:	<B>-offvalue</B>

<DD><BR>
Specifies value to store in the button's associated variable whenever
this button is deselected.  Defaults to ``0''.
</DL>
<P>
<BR>
<DL>
<DT>Name:	<B>onValue</B>

<DD><DT>Class:	<B>Value</B>

<DD><DT>Command-Line Switch:	<B>-onvalue</B>

<DD><BR>
Specifies value to store in the button's associated variable whenever
this button is selected.  Defaults to ``1''.
</DL>
<P>
<BR>
<DL>
<DT>Name:	<B>selectColor</B>

<DD><DT>Class:	<B>Background</B>

<DD><DT>Command-Line Switch:	<B>-selectcolor</B>

<DD><BR>
Specifies a background color to use when the button is selected.
If <B>indicatorOn</B> is true then the color applicies to the indicator.
If <B>indicatorOn</B> is false, this color is used as the background
for the entire widget, in place of <B>background</B> or <B>activeBackground</B>,
whenever the widget is selected.
If specified as an empty string then no special color is used for
displaying when the widget is selected.
</DL>
<P>
<BR>
<DL>
<DT>Name:	<B>selectImage</B>

<DD><DT>Class:	<B>SelectImage</B>

<DD><DT>Command-Line Switch:	<B>-selectimage</B>

<DD><BR>
Specifies an image to display (in place of the <B>image</B> option)
when the checkbutton is selected.
This option is ignored unless the <B>image</B> option has been
specified.
</DL>
<P>
<BR>
<DL>
<DT>Name:	<B>state</B>

<DD><DT>Class:	<B>State</B>

<DD><DT>Command-Line Switch:	<B>-state</B>

<DD><BR>
Specifies one of three states for the checkbutton:  <B>normal</B>, <B>active</B>,
or <B>disabled</B>.  In normal state the checkbutton is displayed using the
<B>foreground</B> and <B>background</B> options.  The active state is
typically used when the pointer is over the checkbutton.  In active state
the checkbutton is displayed using the <B>activeForeground</B> and
<B>activeBackground</B> options.  Disabled state means that the checkbutton
should be insensitive:  the default bindings will refuse to activate
the widget and will ignore mouse button presses.
In this state the <B>disabledForeground</B> and
<B>background</B> options determine how the checkbutton is displayed.
</DL>
<P>
<BR>
<DL>
<DT>Name:	<B>variable</B>

<DD><DT>Class:	<B>Variable</B>

<DD><DT>Command-Line Switch:	<B>-variable</B>

<DD><BR>
Specifies name of global variable to set to indicate whether
or not this button is selected.  Defaults to the name of the
button within its parent (i.e. the last element of the button
window's path name).
</DL>
<P>
<BR>
<DL>
<DT>Name:	<B>width</B>

<DD><DT>Class:	<B>Width</B>

<DD><DT>Command-Line Switch:	<B>-width</B>

<DD><BR>
Specifies a desired width for the button.
If an image or bitmap is being displayed in the button then the value is in
screen units (i.e. any of the forms acceptable to <B>Tk_GetPixels</B>);
for text it is in characters.
If this option isn't specified, the button's desired width is computed
from the size of the image or bitmap or text being displayed in it.
</DL>
<HR>

<A NAME=DESCRIPTION><H2>DESCRIPTION</H2>
</A><P>
The <B>checkbutton</B> command creates a new window (given by the
<I>pathName</I> argument) and makes it into a checkbutton widget.
Additional
options, described above, may be specified on the command line
or in the option database
to configure aspects of the checkbutton such as its colors, font,
text, and initial relief.  The <B>checkbutton</B> command returns its
<I>pathName</I> argument.  At the time this command is invoked,
there must not exist a window named <I>pathName</I>, but
<I>pathName</I>'s parent must exist.
<P>
A checkbutton is a widget
that displays a textual string, bitmap or image
and a square called an <I>indicator</I>.
If text is displayed, it must all be in a single font, but it
can occupy multiple lines on the screen (if it contains newlines
or if wrapping occurs because of the <B>wrapLength</B> option) and
one of the characters may optionally be underlined using the
<B>underline</B> option.
A checkbutton has
all of the behavior of a simple button, including the
following: it can display itself in either of three different
ways, according to the <B>state</B> option;
it can be made to appear
raised, sunken, or flat; it can be made to flash; and it invokes
a Tcl command whenever mouse button 1 is clicked over the
checkbutton.
<P>
In addition, checkbuttons can be <I>selected</I>.
If a checkbutton is selected then the indicator is normally
drawn with a sunken relief and a special color, and
a Tcl variable associated with the checkbutton is set to a particular
value (normally 1).
If the checkbutton is not selected, then the indicator is drawn with a
raised relief and no special color, and the associated variable is
set to a different value (typically 0).
By default, the name of the variable associated with a checkbutton is the
same as the <I>name</I> used to create the checkbutton.
The variable name, and the ``on'' and ``off'' values stored in it,
may be modified with options on the command line or in the option
database.
Configuration options may also be used to modify the way the
indicator is displayed (or whether it is displayed at all).
By default a checkbutton is configured to select and deselect
itself on alternate button clicks.
In addition, each checkbutton monitors its associated variable and
automatically selects and deselects itself when the variables value
changes to and from the button's ``on'' value.

<A NAME=Section2><H2>WIDGET COMMAND</H2>
</A><P>
The <B>checkbutton</B> command creates a new Tcl command whose
name is <I>pathName</I>.  This
command may be used to invoke various
operations on the widget.  It has the following general form:
<BR>
<PRE>
<I>pathName option </I>?<I>arg arg ...</I>?<BR>
<BR>
</PRE>
<I>Option</I> and the <I>arg</I>s
determine the exact behavior of the command.  The following
commands are possible for checkbutton widgets:
<DL>
<DT><I>pathName </I><B>cget</B> <I>option</I>

<DD>Returns the current value of the configuration option given
by <I>option</I>.
<I>Option</I> may have any of the values accepted by the <B>checkbutton</B>
command.
<DT><I>pathName </I><B>configure</B> ?<I>option</I>? ?<I>value option value ...</I>?

<DD>Query or modify the configuration options of the widget.
If no <I>option</I> is specified, returns a list describing all of
the available options for <I>pathName</I> (see <A HREF="ConfigWidg.ht"> <B>Tk_ConfigureInfo</B></A> for
information on the format of this list).  If <I>option</I> is specified
with no <I>value</I>, then the command returns a list describing the
one named option (this list will be identical to the corresponding
sublist of the value returned if no <I>option</I> is specified).  If
one or more <I>option-value</I> pairs are specified, then the command
modifies the given widget option(s) to have the given value(s);  in
this case the command returns an empty string.
<I>Option</I> may have any of the values accepted by the <B>checkbutton</B>
command.
<DT><I>pathName </I><B>deselect</B>

<DD>Deselects the checkbutton and sets the associated variable to its ``off''
value.
<DT><I>pathName </I><B>flash</B>

<DD>Flashes the checkbutton.  This is accomplished by redisplaying the checkbutton
several times, alternating between active and normal colors.  At
the end of the flash the checkbutton is left in the same normal/active
state as when the command was invoked.
This command is ignored if the checkbutton's state is <B>disabled</B>.
<DT><I>pathName </I><B>invoke</B>

<DD>Does just what would have happened if the user invoked the checkbutton
with the mouse: toggle the selection state of the button and invoke
the Tcl command associated with the checkbutton, if there is one.
The return value is the return value from the Tcl command, or an
empty string if there is no command associated with the checkbutton.
This command is ignored if the checkbutton's state is <B>disabled</B>.
<DT><I>pathName </I><B>select</B>

<DD>Selects the checkbutton and sets the associated variable to its ``on''
value.
<DT><I>pathName </I><B>toggle</B>

<DD>Toggles the selection state of the button, redisplaying it and
modifying its associated variable to reflect the new state.

</DL>
<A NAME=BINDINGS><H2>BINDINGS</H2>
</A><P>
Tk automatically creates class bindings for checkbuttons that give them
the following default behavior:
<DL>
<DT>[1]
<DD>A checkbutton activates whenever the mouse passes over it and deactivates
whenever the mouse leaves the checkbutton.
<DT>[2]
<DD>When mouse button 1 is pressed over a checkbutton it is invoked (its
selection state toggles and the command associated with the button is
invoked, if there is one).
<DT>[3]
<DD>When a checkbutton has the input focus, the space key causes the checkbutton
to be invoked.
<P>
If the checkbutton's state is <B>disabled</B> then none of the above
actions occur:  the checkbutton is completely non-responsive.
<P>
The behavior of checkbuttons can be changed by defining new bindings for
individual widgets or by redefining the class bindings.

</DL>
<A NAME=KEYWORDS><H2>KEYWORDS</H2>
</A>checkbutton, widget
