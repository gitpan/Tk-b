<HTML>
<! Copyright (c) 1990 The Regents of the University of California.-->
<! Copyright (c) 1994 Sun Microsystems, Inc.-->
<! See the file "license.terms" for information on usage and redistribution-->
<! of this file, and for a DISCLAIMER OF ALL WARRANTIES.-->
<! -->
<! @(#) GetGC.3 1.9 95/05/06 15:29:35-->
<! -->
<H1>Tk_GetGC</H1>
<HR>
<A NAME=NAME><H2>NAME</H2>
</A>Tk_GetGC, Tk_FreeGC - maintain database of read-only graphics contexts<BR>
<A NAME=SYNOPSIS><H2>SYNOPSIS</H2>
</A><BR>
<B>#include &lt;tk.h&gt;</B><BR>
<P>
GC<BR>
<B>Tk_GetGC</B>(<I>tkwin, valueMask, valuePtr</I>)<BR>
<P>
<B>Tk_FreeGC(</B><I>display, gc</I>)<BR>
<A NAME=ARGUMENTS><H2>ARGUMENTS</H2>
</A><DL>
<DT><CODE>Tk_Window tkwin</CODE>
(in) <DD>Token for window in which the graphics context will be used.<BR>
<DT><CODE>"unsigned long" valueMask</CODE>
(in) <DD>Mask of bits (such as <B>GCForeground</B> or <B>GCStipple</B>)<BR>
indicating which fields of <I>*valuePtr</I> are valid.<BR>
<DT><CODE>XGCValues *valuePtr</CODE>
(in) <DD>Pointer to structure describing the desired values for the<BR>
graphics context.<BR>
<DT><CODE>Display *display</CODE>
(in) <DD>Display for which <I>gc</I> was allocated.<BR>
<DT><CODE>GC gc</CODE>
(in) <DD>X identifier for graphics context that is no longer needed.<BR>
Must have been allocated by <B>Tk_GetGC</B>.<BR>
</DL>
<HR>
<BR>
<A NAME=DESCRIPTION><H2>DESCRIPTION</H2>
</A><P>
<B>Tk_GetGC</B> and <B>Tk_FreeGC</B> manage a collection of graphics contexts<BR>
being used by an application.  The procedures allow graphics contexts to be<BR>
shared, thereby avoiding the server overhead that would be incurred<BR>
if a separate GC were created for each use.  <B>Tk_GetGC</B> takes arguments<BR>
describing the desired graphics context and returns an X identifier<BR>
for a GC that fits the description.  The graphics context that is returned<BR>
will have default values in all of the fields not specified explicitly<BR>
by <I>valueMask</I> and <I>valuePtr</I>.<BR>
<P>
<B>Tk_GetGC</B> maintains a<BR>
database of all the graphics contexts it has created.  Whenever possible,<BR>
a call to <B>Tk_GetGC</B> will<BR>
return an existing graphics context rather than creating a new one.  This<BR>
approach can substantially reduce server overhead, so <B>Tk_GetGC</B><BR>
should generally be used in preference to the Xlib procedure<BR>
<B>XCreateGC</B>, which creates a new graphics context on each call.<BR>
<P>
Since the return values of <B>Tk_GetGC</B><BR>
are shared, callers should never modify the graphics contexts<BR>
returned by <B>Tk_GetGC</B>.<BR>
If a graphics context must be modified dynamically, then it should be<BR>
created by calling <B>XCreateGC</B> instead of <B>Tk_GetGC</B>.<BR>
<P>
When a graphics context<BR>
is no longer needed, <B>Tk_FreeGC</B> should be called to release it.<BR>
There should be exactly one call to <B>Tk_FreeGC</B> for<BR>
each call to <B>Tk_GetGC</B>.<BR>
When a graphics context is no longer in use anywhere (i.e. it has<BR>
been freed as many times as it has been gotten) <B>Tk_FreeGC</B><BR>
will release it to the X server and delete it from the database.<BR>
<BR>
<A NAME=KEYWORDS><H2>KEYWORDS</H2>
</A>graphics context<BR>
