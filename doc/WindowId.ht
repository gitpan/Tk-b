<HTML>
<! Copyright (c) 1990-1993 The Regents of the University of California.-->
<! Copyright (c) 1994 Sun Microsystems, Inc.-->
<! See the file "license.terms" for information on usage and redistribution-->
<! of this file, and for a DISCLAIMER OF ALL WARRANTIES.-->
<! -->
<! @(#) WindowId.3 1.12 95/05/06 15:30:36-->
<! -->
<H1>Tk_WindowId</H1>
<HR>
<A NAME=NAME><H2>NAME</H2>
</A>Tk_WindowId, Tk_Parent, Tk_Display, Tk_DisplayName, Tk_ScreenNumber, Tk_Screen, Tk_X, Tk_Y, Tk_Width, Tk_Height, Tk_Changes, Tk_Attributes, Tk_IsMapped, Tk_IsTopLevel, Tk_ReqWidth, Tk_ReqHeight, Tk_InternalBorderWidth, Tk_Visual, Tk_Depth, Tk_Colormap  - retrieve information from Tk's local data structure<BR>
<A NAME=SYNOPSIS><H2>SYNOPSIS</H2>
</A><BR>
<B>#include &lt;tk.h&gt;</B><BR>
<P>
Window<BR>
<B>Tk_WindowId</B>(<I>tkwin</I>)<BR>
<P>
Tk_Window<BR>
<B>Tk_Parent</B>(<I>tkwin</I>)<BR>
<P>
Display *<BR>
<B>Tk_Display</B>(<I>tkwin</I>)<BR>
<P>
char *<BR>
<B>Tk_DisplayName</B>(<I>tkwin</I>)<BR>
<P>
int<BR>
<B>Tk_ScreenNumber</B>(<I>tkwin</I>)<BR>
<P>
Screen *<BR>
<B>Tk_Screen</B>(<I>tkwin</I>)<BR>
<P>
int<BR>
<B>Tk_X</B>(<I>tkwin</I>)<BR>
<P>
int<BR>
<B>Tk_Y</B>(<I>tkwin</I>)<BR>
<P>
int<BR>
<B>Tk_Width</B>(<I>tkwin</I>)<BR>
<P>
int<BR>
<B>Tk_Height</B>(<I>tkwin</I>)<BR>
<P>
XWindowChanges *<BR>
<B>Tk_Changes</B>(<I>tkwin</I>)<BR>
<P>
XSetWindowAttributes *<BR>
<B>Tk_Attributes</B>(<I>tkwin</I>)<BR>
<P>
int<BR>
<B>Tk_IsMapped</B>(<I>tkwin</I>)<BR>
<P>
int<BR>
<B>Tk_IsTopLevel</B>(<I>tkwin</I>)<BR>
<P>
int<BR>
<B>Tk_ReqWidth</B>(<I>tkwin</I>)<BR>
<P>
int<BR>
<BR>
<B>Tk_ReqHeight</B>(<I>tkwin</I>)<BR>
<P>
int<BR>
<BR>
<B>Tk_InternalBorderWidth</B>(<I>tkwin</I>)<BR>
<P>
Visual *<BR>
<BR>
<B>Tk_Visual</B>(<I>tkwin</I>)<BR>
<P>
int<BR>
<BR>
<B>Tk_Depth</B>(<I>tkwin</I>)<BR>
<P>
Colormap<BR>
<BR>
<B>Tk_Colormap</B>(<I>tkwin</I>)<BR>
<A NAME=ARGUMENTS><H2>ARGUMENTS</H2>
</A><DL>
<DT><CODE>Tk_Window tkwin</CODE>
(in) <DD>Token for window.<BR>
</DL>
<HR>
<BR>
<A NAME=DESCRIPTION><H2>DESCRIPTION</H2>
</A><P>
<B>Tk_WindowID</B> and the other names listed above are<BR>
all macros that return fields from Tk's local data structure<BR>
for <I>tkwin</I>.  None of these macros requires any<BR>
interaction with the server;  it is safe to assume that<BR>
all are fast.<BR>
<P>
<B>Tk_WindowId</B> returns the X identifier for <I>tkwin</I>,<BR>
or <B>NULL</B> if no X window has been created for <I>tkwin</I><BR>
yet (See the <A HREF="CrtMainWin.ht"> <B>Tk_CreateMainWindow</B></A> manual entry for details).<BR>
<P>
<B>Tk_Parent</B> returns Tk's token for the logical parent of<BR>
<I>tkwin</I>.  The parent is the token that was specified when<BR>
<I>tkwin</I> was created, or NULL for main windows.<BR>
<P>
<B>Tk_Display</B> returns a pointer to the Xlib display structure<BR>
corresponding to <I>tkwin</I>.  <B>Tk_DisplayName</B> returns an<BR>
ASCII string identifying <I>tkwin</I>'s display.  <B>Tk_ScreenNumber</B><BR>
returns the index of <I>tkwin</I>'s screen among all the screens<BR>
of <I>tkwin</I>'s display.  <B>Tk_Screen</B> returns a pointer to<BR>
the Xlib structure corresponding to <I>tkwin</I>'s screen.<BR>
<P>
<B>Tk_X</B>, <B>Tk_Y</B>, <B>Tk_Width</B>, and <B>Tk_Height</B><BR>
return information about <I>tkwin's</I> location within its<BR>
parent and its size.  The location information refers to the<BR>
upper-left pixel in the window, or its border if there is one.<BR>
The width and height information refers to the interior size<BR>
of the window, not including any border.  <B>Tk_Changes</B><BR>
returns a pointer to a structure containing all of the above<BR>
information plus a few other fields.  <B>Tk_Attributes</B><BR>
returns a pointer to an XSetWindowAttributes structure describing<BR>
all of the attributes of the <I>tkwin</I>'s window, such as background<BR>
pixmap, event mask, and so on (Tk keeps track of all this information<BR>
as it is changed by the application).  Note: it is essential that<BR>
applications use Tk procedures like <B>Tk_ResizeWindow</B> instead<BR>
of X procedures like <B>XResizeWindow</B>, so that Tk can keep its<BR>
data structures up-to-date.<BR>
<P>
<B>Tk_IsMapped</B> returns a non-zero value if <I>tkwin</I><BR>
is mapped and zero if <I>tkwin</I> isn't mapped.<BR>
<P>
<B>Tk_IsTopLevel</B> returns a non-zero value if <I>tkwin</I><BR>
is a top-level window (its X parent is the root window of the<BR>
screen) and zero if <I>tkwin</I> isn't a top-level window.<BR>
<P>
<B>Tk_ReqWidth</B> and <B>Tk_ReqHeight</B> return information about<BR>
the window's requested size.  These values correspond to the last<BR>
call to <B>Tk_GeometryRequest</B> for <I>tkwin</I>.<BR>
<P>
<B>Tk_InternalBorderWidth</B> returns the width of internal border<BR>
that has been requested for <I>tkwin</I>, or 0 if no internal border<BR>
was requested.  The return value is simply the last value passed<BR>
to <B>Tk_SetInternalBorder</B> for <I>tkwin</I>.<BR>
<P>
<B>Tk_Visual</B>, <B>Tk_Depth</B>, and <B>Tk_Colormap</B> return<BR>
information about the visual characteristics of a window.<BR>
<B>Tk_Visual</B> returns the visual type for<BR>
the window, <B>Tk_Depth</B> returns the number of bits per pixel,<BR>
and <B>Tk_Colormap</B> returns the current<BR>
colormap for the window.  The visual characteristics are<BR>
normally set from the defaults for the window's screen, but<BR>
they may be overridden by calling <B>Tk_SetWindowVisual</B>.<BR>
<BR>
<A NAME=KEYWORDS><H2>KEYWORDS</H2>
</A>attributes, colormap, depth, display, height, geometry manager,<BR>
identifier, mapped, requested size, screen, top-level,<BR>
visual, width, window, x, y<BR>
